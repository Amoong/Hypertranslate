[{"C:\\Coding\\NomadCoder\\redoocks\\src\\App.tsx":"1","C:\\Coding\\NomadCoder\\redoocks\\src\\Header.tsx":"2","C:\\Coding\\NomadCoder\\redoocks\\src\\Screen.tsx":"3","C:\\Coding\\NomadCoder\\redoocks\\src\\context.tsx":"4","C:\\Coding\\NomadCoder\\Hypertranslate\\src\\translation.tsx":"5","C:\\Coding\\NomadCoder\\Hypertranslate\\src\\context.tsx":"6","C:\\Coding\\NomadCoder\\Hypertranslate\\src\\Screen.tsx":"7","C:\\Coding\\NomadCoder\\Hypertranslate\\src\\App.tsx":"8"},{"size":147,"mtime":1611228919731,"results":"9","hashOfConfig":"10"},{"size":325,"mtime":1611234304869,"results":"11","hashOfConfig":"10"},{"size":332,"mtime":1611234731962,"results":"12","hashOfConfig":"10"},{"size":917,"mtime":1611234599351,"results":"13","hashOfConfig":"10"},{"size":126,"mtime":1611454276850,"results":"14","hashOfConfig":"15"},{"size":1170,"mtime":1611454135195,"results":"16","hashOfConfig":"15"},{"size":321,"mtime":1611461555944,"results":"17","hashOfConfig":"15"},{"size":272,"mtime":1611450437134,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wxc4rq",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zp6ttu",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Coding\\NomadCoder\\redoocks\\src\\App.tsx",[],"C:\\Coding\\NomadCoder\\redoocks\\src\\Header.tsx",[],"C:\\Coding\\NomadCoder\\redoocks\\src\\Screen.tsx",[],"C:\\Coding\\NomadCoder\\redoocks\\src\\context.tsx",["36"],"import React, { useState, useContext } from \"react\";\r\nimport { runInNewContext } from \"vm\";\r\n\r\nconst defaultValue = {\r\n  user: { name: \"\", loggedIn: false },\r\n  fn: {\r\n    logUserIn: () => {},\r\n  },\r\n};\r\n\r\nconst UserContext = React.createContext(defaultValue);\r\n\r\ninterface IProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst UserContextProvider: React.FunctionComponent<IProps> = ({ children }) => {\r\n  const [user, setUser] = useState({\r\n    name: \"Mu\",\r\n    loggedIn: false,\r\n  });\r\n  const logUserIn = () => setUser({ ...user, loggedIn: true });\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, fn: { logUserIn } }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUser = () => {\r\n  const { user } = useContext(UserContext);\r\n  return user;\r\n};\r\n\r\nexport const useFns = () => {\r\n  const { fn } = useContext(UserContext);\r\n  return fn;\r\n};\r\n\r\nexport default UserContextProvider;\r\n","C:\\Coding\\NomadCoder\\Hypertranslate\\src\\translation.tsx",[],"C:\\Coding\\NomadCoder\\Hypertranslate\\src\\context.tsx",[],"C:\\Coding\\NomadCoder\\Hypertranslate\\src\\Screen.tsx",[],"C:\\Coding\\NomadCoder\\Hypertranslate\\src\\App.tsx",[],{"ruleId":"37","severity":1,"message":"38","line":2,"column":10,"nodeType":"39","messageId":"40","endLine":2,"endColumn":25},"@typescript-eslint/no-unused-vars","'runInNewContext' is defined but never used.","Identifier","unusedVar"]